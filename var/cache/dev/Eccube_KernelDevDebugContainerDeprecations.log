a:396:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\DependencyInjection\Extension\Extension::getAlias()" might add "string" as a native return type declaration in the future. Do the same in child class "Exercise\HTMLPurifierBundle\DependencyInjection\ExerciseHTMLPurifierExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:64:"C:\laragon\www\shop\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:152;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\DependencyInjection\Extension\Extension::getAlias()" might add "string" as a native return type declaration in the future. Do the same in child class "Eccube\DependencyInjection\EccubeExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:64:"C:\laragon\www\shop\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:152;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:354:"Method "Symfony\Component\DependencyInjection\Extension\ConfigurationExtensionInterface::getConfiguration()" might add "?ConfigurationInterface" as a native return type declaration in the future. Do the same in implementation "Eccube\DependencyInjection\EccubeExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:64:"C:\laragon\www\shop\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:152;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\ComposerInstallCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:162:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\ComposerInstallCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\ComposerRemoveCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:161:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\ComposerRemoveCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:302:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\ComposerRequireAlreadyInstalledPluginsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:185:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\ComposerRequireAlreadyInstalledPluginsCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\ComposerRequireCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:162:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\ComposerRequireCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\ComposerUpdateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:161:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\ComposerUpdateCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\DeleteCartsCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:158:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\DeleteCartsCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\GenerateDummyDataCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:16384;s:7:"message";s:164:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\GenerateDummyDataCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\GenerateProxyCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:160:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\GenerateProxyCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\InstallerCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:156:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\InstallerCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:16384;s:7:"message";s:203:"The "Doctrine\Bundle\DoctrineBundle\Command\DoctrineCommand" class is considered internal. It may change without further notice. You should not use it from "Eccube\Command\LoadDataFixturesEccubeCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\LoadDataFixturesEccubeCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:169:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\LoadDataFixturesEccubeCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginDisableCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:16384;s:7:"message";s:160:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginDisableCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:26;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginEnableCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:27;a:6:{s:4:"type";i:16384;s:7:"message";s:159:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginEnableCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:28;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginGenerateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:29;a:6:{s:4:"type";i:16384;s:7:"message";s:161:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginGenerateCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:30;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginInstallCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:31;a:6:{s:4:"type";i:16384;s:7:"message";s:160:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginInstallCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:32;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginSchemaUpdateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:33;a:6:{s:4:"type";i:16384;s:7:"message";s:165:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginSchemaUpdateCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:34;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginUninstallCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:35;a:6:{s:4:"type";i:16384;s:7:"message";s:162:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginUninstallCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:36;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "Eccube\Command\PluginUpdateCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:37;a:6:{s:4:"type";i:16384;s:7:"message";s:159:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Eccube\Command\PluginUpdateCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:38;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Doctrine\Common\DataFixtures\Executor\AbstractExecutor::execute()" might add "void" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\Common\CsvDataFixtures\Executor\DbalExecutor" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:39;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Doctrine\ORM\Query\Filter\SQLFilter::addFilterConstraint()" might add "string" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\Filter\NoStockHiddenFilter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:40;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Doctrine\ORM\Query\Filter\SQLFilter::addFilterConstraint()" might add "string" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\Filter\OrderStatusFilter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:41;a:6:{s:4:"type";i:16384;s:7:"message";s:318:"Method "Doctrine\Persistence\Mapping\Driver\MappingDriver::getAllClassNames()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Doctrine\ORM\Mapping\Driver\NopAnnotationDriver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:42;a:6:{s:4:"type";i:16384;s:7:"message";s:315:"Method "Doctrine\Persistence\Mapping\Driver\MappingDriver::getAllClassNames()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Doctrine\ORM\Mapping\Driver\AnnotationDriver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:43;a:6:{s:4:"type";i:16384;s:7:"message";s:325:"Method "Doctrine\Persistence\Mapping\Driver\MappingDriver::getAllClassNames()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Doctrine\ORM\Mapping\Driver\ReloadSafeAnnotationDriver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:44;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Method "Doctrine\ORM\Query\AST\Functions\FunctionNode::parse()" might add "void" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\ORM\Query\Extract" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:45;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Doctrine\ORM\Query\AST\Functions\FunctionNode::getSql()" might add "string" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\ORM\Query\Extract" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:46;a:6:{s:4:"type";i:16384;s:7:"message";s:280:"Method "Doctrine\ORM\Query\AST\Functions\FunctionNode::parse()" might add "void" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\ORM\Query\Normalize" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:47;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Method "Doctrine\ORM\Query\AST\Functions\FunctionNode::getSql()" might add "string" as a native return type declaration in the future. Do the same in child class "Eccube\Doctrine\ORM\Query\Normalize" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:48;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Form\DataTransformerInterface::transform()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\DataTransformer\EntityToIdTransformer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:49;a:6:{s:4:"type";i:16384;s:7:"message";s:311:"Method "Symfony\Component\Form\DataTransformerInterface::reverseTransform()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\DataTransformer\EntityToIdTransformer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:50;a:6:{s:4:"type";i:16384;s:7:"message";s:321:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\EventListener\ConvertKanaListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:51;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\AddCartType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:52;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\AddressType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:53;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\AuthenticationType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:54;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\AuthorityRoleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:55;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\BlockType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:56;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\CalendarType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:57;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\CategoryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:58;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ChangePasswordType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:59;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ClassCategoryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:60;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ClassNameType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:61;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\CsvImportType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:62;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\CustomerType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:63;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\DeliveryFeeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:64;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\DeliveryTimeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:65;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\DeliveryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:66;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\LayoutType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:67;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\LogType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:68;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\LoginType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:69;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\MailType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:70;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\MainEditType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:71;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\MasterdataDataType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:72;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\MasterdataEditType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:73;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\MasterdataType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:74;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\MemberType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:75;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\NewsType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:76;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\OrderItemType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:77;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\OrderMailType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:78;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\OrderType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:79;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\PageType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:80;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\PaymentRegisterType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:81;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\PluginLocalInstallType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:82;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\PluginManagementType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:83;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ProductClassType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:84;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ProductTag" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:85;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ProductType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:86;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\SearchCustomerType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:87;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\SearchLoginHistoryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:88;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\SearchOrderType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:89;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\SearchPluginApiType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:90;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\SearchProductType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:91;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\SecurityType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:92;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ShippingType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:93;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\ShopMasterType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:94;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\TagType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:95;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\TaxRuleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:96;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\TemplateType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:97;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Admin\TwoFactorAuthType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:98;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\ContactType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:99;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\CustomerAddressType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:100;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\CustomerLoginType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:101;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\EntryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:102;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\ForgotType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:103;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\NonMemberType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:104;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\PasswordResetType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:105;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\ShoppingShippingType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:106;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Front\ShoppingShippingType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:107;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Install\Step1Type" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:108;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Install\Step3Type" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:109;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Install\Step4Type" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:110;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Install\Step5Type" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:111;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\KanaType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:112;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\KanaType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:113;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\MasterType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:114;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\MasterType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:115;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\CategoryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:116;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\CategoryType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:117;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\CsvType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:118;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\CsvType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:119;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\CustomerStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:120;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\CustomerStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:121;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\DeliveryDurationType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:122;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\DeliveryDurationType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:123;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\DeviceTypeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:124;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\DeviceTypeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:125;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\JobType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:126;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\JobType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:127;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\LoginHistoryStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:128;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\LoginHistoryStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:129;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\MailTemplateType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:130;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\MailTemplateType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:131;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\OrderStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:132;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\OrderStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:133;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\PageMaxType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:134;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\PageMaxType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:135;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\PaymentType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:136;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\PaymentType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:137;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\PrefType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:138;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\PrefType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:139;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\ProductListMaxType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:140;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\ProductListMaxType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:141;a:6:{s:4:"type";i:16384;s:7:"message";s:300:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\ProductListOrderByType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:142;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\ProductListOrderByType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:143;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\ProductStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:144;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\ProductStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:145;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\RoundingTypeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:146;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\RoundingTypeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:147;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\SaleTypeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:148;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\SaleTypeType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:149;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\SexType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:150;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Master\SexType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:151;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\NameType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:152;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\PhoneNumberType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:153;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\PhoneNumberType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:154;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\PostalType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:155;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\PostalType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:156;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\PriceType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:157;a:6:{s:4:"type";i:16384;s:7:"message";s:280:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\PriceType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:158;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\RepeatedEmailType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:159;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\RepeatedEmailType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:160;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\RepeatedPasswordType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:161;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\RepeatedPasswordType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:162;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\SearchProductBlockType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:163;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\SearchProductType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:164;a:6:{s:4:"type";i:16384;s:7:"message";s:295:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\ShippingMultipleItemType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:165;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\ShippingMultipleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:166;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\ShoppingMultipleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:167;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Shopping\OrderItemType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:168;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Shopping\OrderType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:169;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\Shopping\ShippingType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:170;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Method "Symfony\Component\Form\FormTypeInterface::getParent()" might add "?string" as a native return type declaration in the future. Do the same in implementation "Eccube\Form\Type\ToggleSwitchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:171;a:6:{s:4:"type";i:16384;s:7:"message";s:166:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\Email".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:55:"C:\laragon\www\shop\src\Eccube\Form\Validator\Email.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:172;a:6:{s:4:"type";i:16384;s:7:"message";s:196:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" class is deprecated, use "Symfony\Component\PasswordHasher\PasswordHasherInterface" instead.";s:4:"file";s:85:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\PasswordEncoderInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:85:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\PasswordEncoderInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:173;a:6:{s:4:"type";i:16384;s:7:"message";s:217:"The "Eccube\Security\Core\Encoder\PasswordEncoder" class implements "Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface" that is deprecated since Symfony 5.3, use {@link PasswordHasherInterface} instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:174;a:6:{s:4:"type";i:16384;s:7:"message";s:335:"Class "Eccube\Security\Core\User\CustomerProvider" should implement method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByIdentifier(string $identifier): UserInterface": loads the user for the given user identifier (e.g. username or email). This method must throw UserNotFoundException if the user is not found.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:175;a:6:{s:4:"type";i:16384;s:7:"message";s:333:"Class "Eccube\Security\Core\User\MemberProvider" should implement method "Symfony\Component\Security\Core\User\UserProviderInterface::loadUserByIdentifier(string $identifier): UserInterface": loads the user for the given user identifier (e.g. username or email). This method must throw UserNotFoundException if the user is not found.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:176;a:6:{s:4:"type";i:16384;s:7:"message";s:379:"Method "Symfony\Component\Security\Http\Authentication\AuthenticationFailureHandlerInterface::onAuthenticationFailure()" might add "Response" as a native return type declaration in the future. Do the same in implementation "Eccube\Security\Http\Authentication\EccubeAuthenticationFailureHandler" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:177;a:6:{s:4:"type";i:16384;s:7:"message";s:380:"Method "Symfony\Component\Security\Http\Authentication\AuthenticationSuccessHandlerInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "Eccube\Security\Http\Authentication\EccubeAuthenticationSuccessHandler" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:178;a:6:{s:4:"type";i:16384;s:7:"message";s:209:"Since symfony/security-http 5.1: The "Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" class is deprecated, use "Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" instead.";s:4:"file";s:87:"C:\laragon\www\shop\vendor\symfony\security-http\Logout\DefaultLogoutSuccessHandler.php";s:4:"line";i:18;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:87:"C:\laragon\www\shop\vendor\symfony\security-http\Logout\DefaultLogoutSuccessHandler.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:179;a:6:{s:4:"type";i:16384;s:7:"message";s:225:"Since symfony/security-http 5.1: The "Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface" interface is deprecated, create a listener for the "Symfony\Component\Security\Http\Event\LogoutEvent" event instead.";s:4:"file";s:89:"C:\laragon\www\shop\vendor\symfony\security-http\Logout\LogoutSuccessHandlerInterface.php";s:4:"line";i:18;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:89:"C:\laragon\www\shop\vendor\symfony\security-http\Logout\LogoutSuccessHandlerInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:180;a:6:{s:4:"type";i:16384;s:7:"message";s:189:"The "Eccube\Security\Http\Authentication\EccubeLogoutSuccessHandler" class extends "Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" that is deprecated since Symfony 5.1.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:181;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface::onLogoutSuccess()" might add "Response" as a native return type declaration in the future. Do the same in implementation "Eccube\Security\Http\Authentication\EccubeLogoutSuccessHandler" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:182;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Security\Core\Authorization\Voter\VoterInterface::vote()" might add "int" as a native return type declaration in the future. Do the same in implementation "Eccube\Security\Voter\AuthorityVoter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:183;a:6:{s:4:"type";i:8192;s:7:"message";s:210:"Return type of Eccube\Service\CsvImportService::current() should either be compatible with Iterator::current(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:137;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:2;}i:184;a:6:{s:4:"type";i:8192;s:7:"message";s:203:"Return type of Eccube\Service\CsvImportService::next() should either be compatible with Iterator::next(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:248;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:2;}i:185;a:6:{s:4:"type";i:8192;s:7:"message";s:202:"Return type of Eccube\Service\CsvImportService::key() should either be compatible with Iterator::key(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:264;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:2;}i:186;a:6:{s:4:"type";i:8192;s:7:"message";s:205:"Return type of Eccube\Service\CsvImportService::valid() should either be compatible with Iterator::valid(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:256;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:2;}i:187;a:6:{s:4:"type";i:8192;s:7:"message";s:207:"Return type of Eccube\Service\CsvImportService::rewind() should either be compatible with Iterator::rewind(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:221;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:2;}i:188;a:6:{s:4:"type";i:8192;s:7:"message";s:230:"Return type of Eccube\Service\CsvImportService::seek($pointer) should either be compatible with SeekableIterator::seek(int $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:272;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:189;a:6:{s:4:"type";i:8192;s:7:"message";s:205:"Return type of Eccube\Service\CsvImportService::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:59:"C:\laragon\www\shop\src\Eccube\Service\CsvImportService.php";s:4:"line";i:232;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:190;a:6:{s:4:"type";i:16384;s:7:"message";s:242:"Method "Countable::count()" might add "int" as a native return type declaration in the future. Do the same in implementation "Eccube\Service\CsvImportService" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:191;a:6:{s:4:"type";i:16384;s:7:"message";s:249:"Method "SeekableIterator::seek()" might add "void" as a native return type declaration in the future. Do the same in implementation "Eccube\Service\CsvImportService" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:192;a:6:{s:4:"type";i:16384;s:7:"message";s:308:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Service\OrderStateMachine" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:193;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Service\SystemService" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:194;a:6:{s:4:"type";i:16384;s:7:"message";s:138:"The "Twig\Template" class is considered internal. It may change without further notice. You should not use it from "Eccube\Twig\Template".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:195;a:6:{s:4:"type";i:16384;s:7:"message";s:245:"Method "Twig\Template::getTemplateName()" might add "string" as a native return type declaration in the future. Do the same in child class "Eccube\Twig\Template" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:196;a:6:{s:4:"type";i:16384;s:7:"message";s:241:"Method "Twig\Template::getDebugInfo()" might add "array" as a native return type declaration in the future. Do the same in child class "Eccube\Twig\Template" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:197;a:6:{s:4:"type";i:16384;s:7:"message";s:246:"Method "Twig\Template::getSourceContext()" might add "Source" as a native return type declaration in the future. Do the same in child class "Eccube\Twig\Template" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:198;a:6:{s:4:"type";i:16384;s:7:"message";s:297:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Util\CacheUtil" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:199;a:6:{s:4:"type";i:16384;s:7:"message";s:179:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Component\Translation\Command\XliffLintCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:267;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:200;a:6:{s:4:"type";i:16384;s:7:"message";s:186:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Component\Translation\Command\XliffLintCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:267;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:201;a:6:{s:4:"type";i:16384;s:7:"message";s:167:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Component\Yaml\Command\LintCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:270;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:202;a:6:{s:4:"type";i:16384;s:7:"message";s:174:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Component\Yaml\Command\LintCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:270;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:203;a:6:{s:4:"type";i:16384;s:7:"message";s:153:"Since symfony/framework-bundle 5.1: Not setting the "framework.router.utf8" configuration option is deprecated, it will default to "true" in version 6.0.";s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:1076;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:376;s:8:"function";s:27:"registerRouterConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:204;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: Not setting the "framework.session.storage_factory_id" configuration option is deprecated, it will default to "session.storage.factory.native" and will replace the "framework.session.storage_id" configuration option in version 6.0.";s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:1144;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:432;s:8:"function";s:28:"registerSessionConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:205;a:6:{s:4:"type";i:16384;s:7:"message";s:126:"Since symfony/security-bundle 5.3: The child node "encoders" at path "security" is deprecated, use "password_hashers" instead.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\MainConfiguration.php";s:4:"line";i:73;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:76:"C:\laragon\www\shop\vendor\symfony\config\Definition\Builder\ExprBuilder.php";s:4:"line";i:239;s:8:"function";s:59:"Symfony\Bundle\SecurityBundle\DependencyInjection\{closure}";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\MainConfiguration";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:206;a:6:{s:4:"type";i:16384;s:7:"message";s:207:"Since symfony/security-bundle 5.1: The "success_handler" at path "security.firewalls.admin.logout" is deprecated, register a listener on the "Symfony\Component\Security\Http\Event\LogoutEvent" event instead.";s:4:"file";s:66:"C:\laragon\www\shop\vendor\symfony\config\Definition\ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:65:"C:\laragon\www\shop\vendor\symfony\config\Definition\BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:207;a:6:{s:4:"type";i:8192;s:7:"message";s:195:"Eccube\Entity\Member implements the Serializable interface, which is deprecated. Implement __serialize() and __unserialize() instead (or in addition, if support for old PHP versions is necessary)";s:4:"file";s:48:"C:\laragon\www\shop\src\Eccube\Entity\Member.php";s:4:"line";i:32;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:721;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:208;a:6:{s:4:"type";i:16384;s:7:"message";s:210:"Class "Eccube\Entity\Member" should implement method "Symfony\Component\Security\Core\User\UserInterface::getUserIdentifier(): string": returns the identifier for this user (e.g. its username or email address).";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:721;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:209;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "Symfony\Component\Security\Core\User\UserInterface::getRoles()" might add "array" as a native return type declaration in the future. Do the same in implementation "Eccube\Entity\Member" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:721;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:210;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Method "Symfony\Component\Security\Core\User\UserInterface::getUsername()" might add "string" as a native return type declaration in the future. Do the same in implementation "Eccube\Entity\Member" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:721;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:211;a:6:{s:4:"type";i:16384;s:7:"message";s:237:"Since symfony/security-bundle 5.3: Configuring an encoder for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "Eccube\Entity\Member" should implement it.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:722;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:189;s:8:"function";s:14:"createEncoders";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:212;a:6:{s:4:"type";i:16384;s:7:"message";s:239:"Since symfony/security-bundle 5.3: Configuring an encoder for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "Eccube\Entity\Customer" should implement it.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:722;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:189;s:8:"function";s:14:"createEncoders";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:213;a:6:{s:4:"type";i:16384;s:7:"message";s:244:"Since symfony/security-bundle 5.3: Configuring a password hasher for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "Eccube\Entity\Member" should implement it.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:837;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:193;s:8:"function";s:13:"createHashers";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:214;a:6:{s:4:"type";i:16384;s:7:"message";s:246:"Since symfony/security-bundle 5.3: Configuring a password hasher for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "Eccube\Entity\Customer" should implement it.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:837;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:193;s:8:"function";s:13:"createHashers";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:215;a:6:{s:4:"type";i:16384;s:7:"message";s:99:"Since doctrine/doctrine-bundle 2.11: Not setting "enable_lazy_ghost_objects" to true is deprecated.";s:4:"file";s:93:"C:\laragon\www\shop\vendor\doctrine\doctrine-bundle\DependencyInjection\DoctrineExtension.php";s:4:"line";i:569;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:93:"C:\laragon\www\shop\vendor\doctrine\doctrine-bundle\DependencyInjection\DoctrineExtension.php";s:4:"line";i:114;s:8:"function";s:7:"ormLoad";s:5:"class";s:68:"Doctrine\Bundle\DoctrineBundle\DependencyInjection\DoctrineExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:216;a:6:{s:4:"type";i:16384;s:7:"message";s:208:"Enabling the "sensio_framework_extra.router.annotations" configuration is deprecated since version 5.2. Set it to false and use the "Symfony\Component\Routing\Annotation\Route" annotation from Symfony itself.";s:4:"file";s:114:"C:\laragon\www\shop\vendor\sensio\framework-extra-bundle\src\DependencyInjection\SensioFrameworkExtraExtension.php";s:4:"line";i:41;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:84:"Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:217;a:6:{s:4:"type";i:16384;s:7:"message";s:172:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bridge\Monolog\Command\ServerLogCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:86:"C:\laragon\www\shop\vendor\symfony\debug-bundle\DependencyInjection\DebugExtension.php";s:4:"line";i:96;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:218;a:6:{s:4:"type";i:16384;s:7:"message";s:179:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bridge\Monolog\Command\ServerLogCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:86:"C:\laragon\www\shop\vendor\symfony\debug-bundle\DependencyInjection\DebugExtension.php";s:4:"line";i:96;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:219;a:6:{s:4:"type";i:16384;s:7:"message";s:344:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "Exercise\HTMLPurifierBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:77:"C:\laragon\www\shop\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:220;a:6:{s:4:"type";i:16384;s:7:"message";s:185:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:85:"C:\laragon\www\shop\vendor\symfony\framework-bundle\Command\AbstractConfigCommand.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:221;a:6:{s:4:"type";i:16384;s:7:"message";s:192:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:85:"C:\laragon\www\shop\vendor\symfony\framework-bundle\Command\AbstractConfigCommand.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:222;a:6:{s:4:"type";i:16384;s:7:"message";s:173:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Component\Validator\Command\DebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:223;a:6:{s:4:"type";i:16384;s:7:"message";s:180:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Component\Validator\Command\DebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:224;a:6:{s:4:"type";i:16384;s:7:"message";s:168:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Component\Form\Command\DebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:225;a:6:{s:4:"type";i:16384;s:7:"message";s:175:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Component\Form\Command\DebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:226;a:6:{s:4:"type";i:16384;s:7:"message";s:208:"Since symfony/asset 5.3: The "Symfony\Component\Asset\VersionStrategy\RemoteJsonManifestVersionStrategy" class is deprecated, use "Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" instead.";s:4:"file";s:94:"C:\laragon\www\shop\vendor\symfony\asset\VersionStrategy\RemoteJsonManifestVersionStrategy.php";s:4:"line";i:16;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:94:"C:\laragon\www\shop\vendor\symfony\asset\VersionStrategy\RemoteJsonManifestVersionStrategy.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:227;a:6:{s:4:"type";i:16384;s:7:"message";s:191:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead.";s:4:"file";s:75:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\EncoderFactory.php";s:4:"line";i:20;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:75:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\EncoderFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:228;a:6:{s:4:"type";i:16384;s:7:"message";s:209:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead.";s:4:"file";s:84:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\EncoderFactoryInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:84:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\EncoderFactoryInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:229;a:6:{s:4:"type";i:16384;s:7:"message";s:193:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher" instead.";s:4:"file";s:80:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\UserPasswordEncoder.php";s:4:"line";i:19;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:80:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\UserPasswordEncoder.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:230;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead.";s:4:"file";s:89:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:89:"C:\laragon\www\shop\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:231;a:6:{s:4:"type";i:16384;s:7:"message";s:245:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" class is deprecated, use the new security system with "Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" instead.";s:4:"file";s:93:"C:\laragon\www\shop\vendor\symfony\security-http\EntryPoint\BasicAuthenticationEntryPoint.php";s:4:"line";i:19;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:93:"C:\laragon\www\shop\vendor\symfony\security-http\EntryPoint\BasicAuthenticationEntryPoint.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:232;a:6:{s:4:"type";i:16384;s:7:"message";s:256:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" class is deprecated, use "Symfony\Component\Security\Http\Firewall\ChannelListener" directly (and optionally configure the HTTP(s) ports there).";s:4:"file";s:93:"C:\laragon\www\shop\vendor\symfony\security-http\EntryPoint\RetryAuthenticationEntryPoint.php";s:4:"line";i:19;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:93:"C:\laragon\www\shop\vendor\symfony\security-http\EntryPoint\RetryAuthenticationEntryPoint.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:233;a:6:{s:4:"type";i:16384;s:7:"message";s:244:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" class is deprecated, use the new security system with "Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" instead.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-http\EntryPoint\FormAuthenticationEntryPoint.php";s:4:"line";i:20;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:92:"C:\laragon\www\shop\vendor\symfony\security-http\EntryPoint\FormAuthenticationEntryPoint.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:234;a:6:{s:4:"type";i:16384;s:7:"message";s:161:"Since symfony/security-http 5.3: The "Symfony\Component\Security\Http\Firewall\RememberMeListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:80:"C:\laragon\www\shop\vendor\symfony\security-http\Firewall\RememberMeListener.php";s:4:"line";i:27;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:80:"C:\laragon\www\shop\vendor\symfony\security-http\Firewall\RememberMeListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:235;a:6:{s:4:"type";i:16384;s:7:"message";s:190:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" class is deprecated, use the new authenticator system instead.";s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\security-core\Authentication\Provider\RememberMeAuthenticationProvider.php";s:4:"line";i:22;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:109:"C:\laragon\www\shop\vendor\symfony\security-core\Authentication\Provider\RememberMeAuthenticationProvider.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:236;a:6:{s:4:"type";i:16384;s:7:"message";s:193:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Authentication\Provider\AuthenticationProviderInterface" interface is deprecated, use the new authenticator system instead.";s:4:"file";s:108:"C:\laragon\www\shop\vendor\symfony\security-core\Authentication\Provider\AuthenticationProviderInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:108:"C:\laragon\www\shop\vendor\symfony\security-core\Authentication\Provider\AuthenticationProviderInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:237;a:6:{s:4:"type";i:16384;s:7:"message";s:227:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" class is deprecated, use "Symfony\Component\Security\Http\RememberMe\PersistentRememberMeHandler" instead.";s:4:"file";s:102:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\PersistentTokenBasedRememberMeServices.php";s:4:"line";i:24;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:102:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\PersistentTokenBasedRememberMeServices.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:238;a:6:{s:4:"type";i:16384;s:7:"message";s:213:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\AbstractRememberMeServices" class is deprecated, use "Symfony\Component\Security\Http\RememberMe\AbstractRememberMeHandler" instead.";s:4:"file";s:90:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\AbstractRememberMeServices.php";s:4:"line";i:29;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:90:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\AbstractRememberMeServices.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:239;a:6:{s:4:"type";i:16384;s:7:"message";s:219:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\RememberMeServicesInterface" interface is deprecated, use "Symfony\Component\Security\Http\RememberMe\RememberMeHandlerInterface" instead.";s:4:"file";s:91:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\RememberMeServicesInterface.php";s:4:"line";i:18;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:91:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\RememberMeServicesInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:240;a:6:{s:4:"type";i:16384;s:7:"message";s:216:"Since symfony/security-http 5.4: The "Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" class is deprecated, use "Symfony\Component\Security\Http\RememberMe\SignatureRememberMeHandler" instead.";s:4:"file";s:92:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\TokenBasedRememberMeServices.php";s:4:"line";i:21;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:92:"C:\laragon\www\shop\vendor\symfony\security-http\RememberMe\TokenBasedRememberMeServices.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:241;a:6:{s:4:"type";i:16384;s:7:"message";s:161:"Since symfony/security-guard 5.3: The "Symfony\Component\Security\Guard\GuardAuthenticatorHandler" class is deprecated, use the new authenticator system instead.";s:4:"file";s:79:"C:\laragon\www\shop\vendor\symfony\security-guard\GuardAuthenticatorHandler.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:79:"C:\laragon\www\shop\vendor\symfony\security-guard\GuardAuthenticatorHandler.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:242;a:6:{s:4:"type";i:16384;s:7:"message";s:172:"Since symfony/security-guard 5.3: The "Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" class is deprecated, use the new authenticator system instead.";s:4:"file";s:90:"C:\laragon\www\shop\vendor\symfony\security-guard\Provider\GuardAuthenticationProvider.php";s:4:"line";i:32;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:90:"C:\laragon\www\shop\vendor\symfony\security-guard\Provider\GuardAuthenticationProvider.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:243;a:6:{s:4:"type";i:16384;s:7:"message";s:172:"Since symfony/security-guard 5.3: The "Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:90:"C:\laragon\www\shop\vendor\symfony\security-guard\Firewall\GuardAuthenticationListener.php";s:4:"line";i:32;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:90:"C:\laragon\www\shop\vendor\symfony\security-guard\Firewall\GuardAuthenticationListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:244;a:6:{s:4:"type";i:16384;s:7:"message";s:203:"The "Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" class is deprecated since version 5.2. Use "Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" instead.";s:4:"file";s:103:"C:\laragon\www\shop\vendor\sensio\framework-extra-bundle\src\Routing\AnnotatedRouteControllerLoader.php";s:4:"line";i:19;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:245;a:6:{s:4:"type";i:16384;s:7:"message";s:165:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bridge\Twig\Command\DebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:246;a:6:{s:4:"type";i:16384;s:7:"message";s:172:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bridge\Twig\Command\DebugCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:247;a:6:{s:4:"type";i:16384;s:7:"message";s:164:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bridge\Twig\Command\LintCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:70:"C:\laragon\www\shop\vendor\symfony\twig-bundle\Command\LintCommand.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:248;a:6:{s:4:"type";i:16384;s:7:"message";s:171:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bridge\Twig\Command\LintCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:70:"C:\laragon\www\shop\vendor\symfony\twig-bundle\Command\LintCommand.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:249;a:6:{s:4:"type";i:16384;s:7:"message";s:188:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bundle\DebugBundle\Command\ServerDumpPlaceholderCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:250;a:6:{s:4:"type";i:16384;s:7:"message";s:195:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bundle\DebugBundle\Command\ServerDumpPlaceholderCommand".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:251;a:6:{s:4:"type";i:16384;s:7:"message";s:168:"Since symfony/maker-bundle 1.29: The "Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" class is deprecated, use "Symfony\Bundle\MakerBundle\Maker\MakeTest" instead.";s:4:"file";s:80:"C:\laragon\www\shop\vendor\symfony\maker-bundle\src\Maker\MakeFunctionalTest.php";s:4:"line";i:29;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:80:"C:\laragon\www\shop\vendor\symfony\maker-bundle\src\Maker\MakeFunctionalTest.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:252;a:6:{s:4:"type";i:16384;s:7:"message";s:162:"Since symfony/maker-bundle 1.29: The "Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" class is deprecated, use "Symfony\Bundle\MakerBundle\Maker\MakeTest" instead.";s:4:"file";s:74:"C:\laragon\www\shop\vendor\symfony\maker-bundle\src\Maker\MakeUnitTest.php";s:4:"line";i:24;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:74:"C:\laragon\www\shop\vendor\symfony\maker-bundle\src\Maker\MakeUnitTest.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:253;a:6:{s:4:"type";i:16384;s:7:"message";s:324:"Method "Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface::warmUp()" might add "array" as a native return type declaration in the future. Do the same in implementation "Exercise\HTMLPurifierBundle\CacheWarmer\SerializerCacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:254;a:6:{s:4:"type";i:16384;s:7:"message";s:330:"Method "Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface::isOptional()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Exercise\HTMLPurifierBundle\CacheWarmer\SerializerCacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:88:"C:\laragon\www\shop\src\Eccube\DependencyInjection\Compiler\AutoConfigurationTagPass.php";s:4:"line";i:44;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:255;a:6:{s:4:"type";i:16384;s:7:"message";s:199:"The "Eccube\Entity\Order::setDiscount()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:256;a:6:{s:4:"type";i:16384;s:7:"message";s:207:"The "Eccube\Entity\Order::setDeliveryFeeTotal()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:257;a:6:{s:4:"type";i:16384;s:7:"message";s:197:"The "Eccube\Entity\Order::setCharge()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:258;a:6:{s:4:"type";i:16384;s:7:"message";s:194:"The "Eccube\Entity\Order::setTax()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:259;a:6:{s:4:"type";i:16384;s:7:"message";s:196:"The "Eccube\Entity\Order::setTotal()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:260;a:6:{s:4:"type";i:16384;s:7:"message";s:202:"The "Eccube\Entity\Order::setAddPoint()" method will require a new "$addPoint|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:261;a:6:{s:4:"type";i:16384;s:7:"message";s:202:"The "Eccube\Entity\Order::setUsePoint()" method will require a new "$usePoint|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\vendor\symfony\http-kernel\DependencyInjection\RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:172;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:262;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Command\DeleteCartsCommand" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:263;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Command\GenerateProxyCommand" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:264;a:6:{s:4:"type";i:16384;s:7:"message";s:270:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Command\InstallerCommand" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:265;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Command\LoadDataFixturesEccubeCommand" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:266;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Command\PluginGenerateCommand" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:267;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\AbstractController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:268;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\AbstractShoppingController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:269;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\AbstractCsvImportController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:270;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\Admin\AdminController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:271;a:6:{s:4:"type";i:16384;s:7:"message";s:270:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\AdminController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:272;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\BlockController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:273;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\CacheController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:274;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\CssController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:275;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\FileController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:276;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\JsController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:277;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\LayoutController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:278;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\MaintenanceController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:279;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\NewsController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:280;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Content\PageController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:281;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Customer\CustomerController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:282;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Customer\CustomerDeliveryEditController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:283;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\Admin\Customer\CustomerEditController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:284;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Customer\CustomerEditController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:285;a:6:{s:4:"type";i:16384;s:7:"message";s:280:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Order\CsvImportController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:286;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Order\EditController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:287;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Order\MailController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:288;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Order\OrderController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:289;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Order\ShippingController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:290;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\CategoryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:291;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\ClassCategoryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:292;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\ClassNameController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:293;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\CsvImportController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:294;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\ProductClassController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:295;a:6:{s:4:"type";i:16384;s:7:"message";s:280:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\ProductController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:296;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Product\TagController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:297;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\CalendarController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:298;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\CsvController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:299;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\DeliveryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:300;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\MailController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:301;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\OrderStatusController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:302;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\PaymentController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:303;a:6:{s:4:"type";i:16384;s:7:"message";s:282:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\ShopController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:304;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\TaxRuleController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:305;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\Shop\TradeLawController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:306;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\AuthorityController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:307;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\LogController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:308;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\LoginHistoryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:309;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\MasterdataController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:310;a:6:{s:4:"type";i:16384;s:7:"message";s:310:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\MemberController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:311;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\MemberController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:312;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\SecurityController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:313;a:6:{s:4:"type";i:16384;s:7:"message";s:317:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\TwoFactorAuthController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:314;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Setting\System\TwoFactorAuthController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:315;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Store\OwnerStoreController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:316;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Store\PluginController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:317;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Admin\Store\TemplateController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:318;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Block\CalendarController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:319;a:6:{s:4:"type";i:16384;s:7:"message";s:269:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Block\CartController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:320;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Block\SearchProductController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:321;a:6:{s:4:"type";i:16384;s:7:"message";s:263:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\CartController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:322;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\ContactController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:323;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\EntryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:324;a:6:{s:4:"type";i:16384;s:7:"message";s:264:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\EntryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:325;a:6:{s:4:"type";i:16384;s:7:"message";s:289:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\ForgotController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:326;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\ForgotController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:327;a:6:{s:4:"type";i:16384;s:7:"message";s:263:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\HelpController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:328;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\InstallPluginController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:329;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Install\InstallController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:330;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Controller\Mypage\ChangeController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:331;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Mypage\ChangeController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:332;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Mypage\DeliveryController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:333;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Mypage\MypageController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:334;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\Mypage\WithdrawController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:335;a:6:{s:4:"type";i:16384;s:7:"message";s:276:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\NonMemberShoppingController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:336;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\ProductController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:337;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\ShippingMultipleController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:338;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Controller\ShoppingController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:339;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\ShoppingController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:340;a:6:{s:4:"type";i:16384;s:7:"message";s:266:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\SitemapController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:341;a:6:{s:4:"type";i:16384;s:7:"message";s:262:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\TopController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:342;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\TradeLawController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:343;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Controller\UserDataController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:344;a:6:{s:4:"type";i:16384;s:7:"message";s:279:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\DataCollector\EccubeDataCollector" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:345;a:6:{s:4:"type";i:16384;s:7:"message";s:293:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Doctrine\EventSubscriber\TaxRuleEventSubscriber" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:346;a:6:{s:4:"type";i:16384;s:7:"message";s:263:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Form\Type\Admin\LoginType" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:347;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Form\Type\PriceType" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:348;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Form\Type\ShippingMultipleItemType" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:349;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Repository\CustomerRepository" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:350;a:6:{s:4:"type";i:16384;s:7:"message";s:271:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Repository\PageRepository" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:351;a:6:{s:4:"type";i:16384;s:7:"message";s:257:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Service\CartService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:352;a:6:{s:4:"type";i:16384;s:7:"message";s:272:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\EntityProxyService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:353;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\MailService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:354;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\OrderHelper" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:355;a:6:{s:4:"type";i:16384;s:7:"message";s:257:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Service\OrderHelper" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:356;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\PluginService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:357;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\SystemService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:358;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\TwoFactorAuthService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:359;a:6:{s:4:"type";i:16384;s:7:"message";s:290:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Eccube\Service\TwoFactorAuthService" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:360;a:6:{s:4:"type";i:16384;s:7:"message";s:260:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Util\CacheUtil" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:361;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Common\EccubeConfig" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:362;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "Eccube\Service\Composer\ComposerServiceInterface" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:363;a:6:{s:4:"type";i:16384;s:7:"message";s:294:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. It is being referenced by the "Customize\Controller\CustomerController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:364;a:6:{s:4:"type";i:16384;s:7:"message";s:270:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Customize\Controller\CustomerController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:365;a:6:{s:4:"type";i:16384;s:7:"message";s:269:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Customize\Controller\ProductController" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:366;a:6:{s:4:"type";i:16384;s:7:"message";s:260:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "eccube.collector.core" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:367;a:6:{s:4:"type";i:16384;s:7:"message";s:268:"Since symfony/framework-bundle 5.3: The "Symfony\Component\HttpFoundation\Session\SessionInterface" and "SessionInterface" aliases are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Log\Processor\SessionProcessor" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:368;a:6:{s:4:"type";i:16384;s:7:"message";s:217:"Since symfony/framework-bundle 5.3: The "session" service and "SessionInterface" alias are deprecated, use "$requestStack->getSession()" instead. It is being referenced by the "Eccube\Tests\Fixture\Generator" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:369;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias is deprecated, use the new authenticator system instead. It is being referenced by the ".service_locator.mdQTIqb" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:370;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias is deprecated, use the new authenticator system instead. It is being referenced by the ".service_locator.EKzrD0r" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:371;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias is deprecated, use the new authenticator system instead. It is being referenced by the ".service_locator.lSupZn2" service.";s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:99:"C:\laragon\www\shop\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:372;a:6:{s:4:"type";i:16384;s:7:"message";s:219:"Since symfony/framework-bundle 5.3: The "session.storage.factory.service" service is deprecated, use "session.storage.factory.native", "session.storage.factory.php_bridge" or "session.storage.factory.mock_file" instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:96:"C:\laragon\www\shop\var\cache\dev\ContainerZMAxxFf\getSession_Storage_Factory_ServiceService.php";s:4:"line";i:23;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:373;a:6:{s:4:"type";i:16384;s:7:"message";s:133:"Since symfony/framework-bundle 5.3: The "session.storage.native" service is deprecated, use "session.storage.factory.native" instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:87:"C:\laragon\www\shop\var\cache\dev\ContainerZMAxxFf\getSession_Storage_NativeService.php";s:4:"line";i:23;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:374;a:6:{s:4:"type";i:8192;s:7:"message";s:82:"preg_match(): Passing null to parameter #2 ($subject) of type string is deprecated";s:4:"file";s:89:"C:\laragon\www\shop\vendor\skorp\detect-incompatible-samesite-useragents\src\SameSite.php";s:4:"line";i:62;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:89:"C:\laragon\www\shop\vendor\skorp\detect-incompatible-samesite-useragents\src\SameSite.php";s:4:"line";i:31;s:8:"function";s:12:"isIosVersion";s:5:"class";s:21:"Skorp\Dissua\SameSite";s:4:"type";s:2:"->";}}s:5:"count";i:8;}i:375;a:6:{s:4:"type";i:16384;s:7:"message";s:144:"Since symfony/framework-bundle 5.3: The "session.storage.metadata_bag" service is deprecated, create your own "session.storage.factory" instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:92:"C:\laragon\www\shop\var\cache\dev\ContainerZMAxxFf\getSession_Storage_MetadataBagService.php";s:4:"line";i:23;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:376;a:6:{s:4:"type";i:16384;s:7:"message";s:136:"Since sensio/framework-extra-bundle 5.2: The "sensio_framework_extra.routing.loader.annot_class" service is deprecated since version 5.2";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:111:"C:\laragon\www\shop\var\cache\de_\ContainerZMAxxFf\getSensioFrameworkExtra_Routing_Loader_AnnotClassService.php";s:4:"line";i:23;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:377;a:6:{s:4:"type";i:16384;s:7:"message";s:134:"Since sensio/framework-extra-bundle 5.2: The "sensio_framework_extra.routing.loader.annot_dir" service is deprecated since version 5.2";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"C:\laragon\www\shop\var\cache\de_\ContainerZMAxxFf\getSensioFrameworkExtra_Routing_Loader_AnnotDirService.php";s:4:"line";i:23;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:378;a:6:{s:4:"type";i:16384;s:7:"message";s:135:"Since sensio/framework-extra-bundle 5.2: The "sensio_framework_extra.routing.loader.annot_file" service is deprecated since version 5.2";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"C:\laragon\www\shop\var\cache\de_\ContainerZMAxxFf\getSensioFrameworkExtra_Routing_Loader_AnnotFileService.php";s:4:"line";i:23;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:379;a:6:{s:4:"type";i:16384;s:7:"message";s:252:"Since symfony/framework-bundle 5.1: Using type "Symfony\Component\Routing\RouteCollectionBuilder" for argument 1 of method "Eccube\Kernel:configureRoutes()" is deprecated, use "Symfony\Component\Routing\Loader\Configurator\RoutingConfigurator" instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:79:"C:\laragon\www\shop\vendor\symfony\framework-bundle\Kernel\MicroKernelTrait.php";s:4:"line";i:214;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:380;a:6:{s:4:"type";i:16384;s:7:"message";s:183:"Since symfony/routing 5.1: The "Symfony\Component\Routing\RouteCollectionBuilder" class is deprecated, use "Symfony\Component\Routing\Loader\Configurator\RoutingConfigurator" instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\routing\RouteCollectionBuilder.php";s:4:"line";i:19;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:381;a:6:{s:4:"type";i:16384;s:7:"message";s:163:"The "Sensio\Bundle\FrameworkExtraBundle\Configuration\Method" annotation is deprecated since version 5.2. Use "Symfony\Component\Routing\Annotation\Route" instead.";s:4:"file";s:85:"C:\laragon\www\shop\vendor\sensio\framework-extra-bundle\src\Configuration\Method.php";s:4:"line";i:14;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:85:"C:\laragon\www\shop\vendor\sensio\framework-extra-bundle\src\Configuration\Method.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:382;a:6:{s:4:"type";i:16384;s:7:"message";s:162:"The "Sensio\Bundle\FrameworkExtraBundle\Configuration\Route" annotation is deprecated since version 5.2. Use "Symfony\Component\Routing\Annotation\Route" instead.";s:4:"file";s:84:"C:\laragon\www\shop\vendor\sensio\framework-extra-bundle\src\Configuration\Route.php";s:4:"line";i:16;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:84:"C:\laragon\www\shop\vendor\sensio\framework-extra-bundle\src\Configuration\Route.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:383;a:6:{s:4:"type";i:16384;s:7:"message";s:166:"Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:63:"C:\laragon\www\shop\vendor\symfony\routing\Annotation\Route.php";s:4:"line";i:80;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:14;}i:384;a:6:{s:4:"type";i:16384;s:7:"message";s:195:"The "Eccube\Entity\Cart::setTotal()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:385;a:6:{s:4:"type";i:16384;s:7:"message";s:206:"The "Eccube\Entity\Cart::setDeliveryFeeTotal()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:386;a:6:{s:4:"type";i:16384;s:7:"message";s:198:"The "Eccube\Entity\Cart::setDiscount()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:387;a:6:{s:4:"type";i:16384;s:7:"message";s:196:"The "Eccube\Entity\Cart::setCharge()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:388;a:6:{s:4:"type";i:16384;s:7:"message";s:193:"The "Eccube\Entity\Cart::setTax()" method will require a new "$total|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:389;a:6:{s:4:"type";i:16384;s:7:"message";s:201:"The "Eccube\Entity\Cart::setAddPoint()" method will require a new "$addPoint|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:390;a:6:{s:4:"type";i:16384;s:7:"message";s:201:"The "Eccube\Entity\Cart::setUsePoint()" method will require a new "$usePoint|int" argument in the next major version of its interface "Eccube\Entity\ItemHolderInterface", not defining it is deprecated.";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:391;a:6:{s:4:"type";i:16384;s:7:"message";s:169:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\NotBlank".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:392;a:6:{s:4:"type";i:16384;s:7:"message";s:167:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\Length".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:393;a:6:{s:4:"type";i:16384;s:7:"message";s:164:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\Url".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:394;a:6:{s:4:"type";i:16384;s:7:"message";s:180:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Form\Extension\Validator\Constraints\Form".";s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:69:"C:\laragon\www\shop\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:307;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:395;a:6:{s:4:"type";i:16384;s:7:"message";s:84:"The "base_template_class" option on Twig\Environment is deprecated since Twig 2.7.0.";s:4:"file";s:56:"C:\laragon\www\shop\vendor\twig\twig\src\Environment.php";s:4:"line";i:121;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\laragon\www\shop\var\cache\dev\ContainerZMAxxFf\Eccube_KernelDevDebugContainer.php";s:4:"line";i:802;s:8:"function";s:11:"__construct";s:5:"class";s:16:"Twig\Environment";s:4:"type";s:2:"->";}}s:5:"count";i:1;}}