<?php

namespace ContainerM8YFqzL;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOrderStateMachineService extends Eccube_KernelDevDebugContainer
{
    /**
     * Gets the private 'Eccube\Service\OrderStateMachine' shared autowired service.
     *
     * @return \Eccube\Service\OrderStateMachine
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'OrderStateMachine.php';

        $a = ($container->services['.container.private.state_machine.order'] ?? $container->get_Container_Private_StateMachine_OrderService());

        if (isset($container->privates['Eccube\\Service\\OrderStateMachine'])) {
            return $container->privates['Eccube\\Service\\OrderStateMachine'];
        }
        $b = ($container->privates['Eccube\\Service\\PurchaseFlow\\Processor\\PointProcessor'] ?? $container->load('getPointProcessorService'));

        if (isset($container->privates['Eccube\\Service\\OrderStateMachine'])) {
            return $container->privates['Eccube\\Service\\OrderStateMachine'];
        }
        $c = ($container->privates['Eccube\\Service\\PurchaseFlow\\Processor\\StockReduceProcessor'] ?? $container->load('getStockReduceProcessorService'));

        if (isset($container->privates['Eccube\\Service\\OrderStateMachine'])) {
            return $container->privates['Eccube\\Service\\OrderStateMachine'];
        }

        return $container->privates['Eccube\\Service\\OrderStateMachine'] = new \Eccube\Service\OrderStateMachine($a, ($container->privates['Eccube\\Repository\\Master\\OrderStatusRepository'] ?? $container->load('getOrderStatusRepositoryService')), $b, $c);
    }
}
